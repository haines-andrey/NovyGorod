@using NovyGorod.Common.Extensions
@using NovyGorodAsp.Models.Posts.Attachments
@using NovyGorodAsp.Models.Posts.MediaData
@using Microsoft.AspNetCore.Mvc.Rendering
@model NovyGorodAsp.Models.Posts.PostViewModel

@{
    var post = Model.Post;
    Layout = "_Layout";
    ViewData["Title"] = post.Title;
    ViewData["MetaDescription"] = post.Summary ?? post.Blocks.FirstOrDefault(block => !block.Text.IsNullOrEmpty())?.Text;
    ViewData["MetaImageUrl"] = post.Preview.Url;
    ViewData["MaxWidth"] = 720;
}

<h1 class="display-4 text-break">@post.Title</h1>
@if (!post.Summary.IsNullOrEmpty())
{
    <p class="lead">@post.Summary</p>
}

@{ await Html.RenderPartialAsync(
           "MediaDataView",
           MediaDataViewModelFactory
               .Create(post.Video ?? post.Preview)
               .WithImageSettings(settings => settings.WithShadow().WithFluid().WithCentering().WithNonSelectable())
               .WithVideoSettings(settings => settings.WithShadow().WithDefaultRatio().WithNonSelectable())); }

<div>
    @foreach (var block in post.Blocks)
    {
        <div>
            <h1 class="display-6">@block.Title</h1>
            <p>@Html.Raw(block.Text)</p>

            @if (!block.Attachments.IsNullOrEmpty())
            {
                await Html.RenderPartialAsync(
                    "Attachments/AttachmentsPreviewCarouselView",
                    new AttachmentsPreviewCarouselViewModel {PostBlockId = block.Id, Attachments = block.Attachments});
            }
        </div>
    }
</div>